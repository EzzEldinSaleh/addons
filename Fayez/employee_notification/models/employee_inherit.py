from odoo import api, fields, modelsimport datetimeclass employeee(models.Model):    _inherit = 'hr.employee'    passport_start_date = fields.Date(string="Passport Start Date", required=False, )    passport_end_date = fields.Date(string="Passport End Date", required=False, )    accommodation_start_date = fields.Date(string="Accommodation Start Date", required=False, )    accommodation_end_date = fields.Date(string="Accommodation End Date", required=False, )    def cron(self):        # for x in self:        #     ICPSudo = self.env['ir.config_parameter'].sudo()        #     notes = ICPSudo.get_param('employee_notification.number_days_before_end')        today = fields.Datetime.today()        employees = self.env['hr.employee'].search([])        #     # if x.accommodation_end_date:        #         # if x.accommodation_end_date.days - notes == today.day:        for x in employees:            self.env['mail.activity'].sudo().create({                'res_id': x.id,                'res_model_id':self.env['ir.model'].search([('model','=','hr.employee')]).id,                'activity_type_id': self.env.ref('mail.mail_activity_data_todo').id,                'summary': 'ezz',                'user_id': 2,                'date_deadline': fields.date.today()            })class resconfig(models.TransientModel):    _inherit = 'res.config.settings'    number_days_before_end = fields.Integer(string="Number Of Days Before End", required=False, )    def set_values(self):        res = super(resconfig, self).set_values()        self.env['ir.config_parameter'].set_param('employee_notification.number_days_before_end', self.number_days_before_end)        return res    @api.model    def get_values(self):        res = super(resconfig, self).get_values()        ICPSudo = self.env['ir.config_parameter'].sudo()        notes = ICPSudo.get_param('employee_notification.number_days_before_end')        res.update(            number_days_before_end=notes,)        return res